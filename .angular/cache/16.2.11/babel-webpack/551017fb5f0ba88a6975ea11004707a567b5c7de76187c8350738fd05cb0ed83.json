{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FlightService {\n  constructor(http) {\n    this.http = http;\n    this.flightList = [];\n  }\n  findById(id) {\n    const url = `http://www.angular.at/api/flight/${id}`;\n    const params = {\n      'id': id\n    };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  load(filter) {\n    this.find(filter).subscribe(result => {\n      console.log({\n        result\n      });\n      this.flightList = result;\n    }, err => {\n      console.error('error loading', err);\n    });\n  }\n  find(filter) {\n    const url = `http://www.angular.at/api/flight`;\n    console.log(\"findddinggggg\");\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    const params = {\n      'from': filter.from,\n      'to': filter.to\n    };\n    console.log({\n      params\n    });\n    // const params = {\n    // };\n    const resp = this.http.get(url, {\n      params,\n      headers\n    });\n    console.log({\n      resp\n    });\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  save(entity) {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    console.log(\"savvvvvvvvvvvvving\");\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put(url, entity, {\n        headers,\n        params\n      });\n    } else {\n      url = `http://www.angular.at/api/flight`;\n      return this.http.post(url, entity, {\n        headers,\n        params\n      });\n    }\n  }\n  delete(entity) {\n    let params = new HttpParams();\n    let url = '';\n    console.log(\"deleeeeeeeeetinnnnnnnnnnnnnnn\");\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete(url, {\n        headers,\n        params\n      });\n    }\n    return EMPTY;\n  }\n  static #_ = this.ɵfac = function FlightService_Factory(t) {\n    return new (t || FlightService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FlightService,\n    factory: FlightService.ɵfac\n  });\n}","map":{"version":3,"names":["EMPTY","HttpHeaders","HttpParams","FlightService","constructor","http","flightList","findById","id","url","params","headers","set","get","load","filter","find","subscribe","result","console","log","err","error","from","to","resp","save","entity","toString","put","post","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["D:\\angular-crud\\demo\\src\\app\\flight\\flight.service.ts"],"sourcesContent":["import { Flight } from './flight';\r\nimport { Room } from './rooms';\r\nimport { FlightFilter } from './flight-filter';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class FlightService {\r\n  flightList: Flight[] = [];\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  findById(id: string): Observable<Flight> {\r\n    const url = `http://www.angular.at/api/flight/${id}`;\r\n    const params = { 'id': id };\r\n    const headers = new HttpHeaders().set('Accept', 'application/json');\r\n    return this.http.get<Flight>(url, { params, headers });\r\n  }\r\n\r\n  load(filter: FlightFilter): void {\r\n    this.find(filter).subscribe(result => {\r\n      console.log({ result });\r\n      this.flightList = result;\r\n    },\r\n      err => {\r\n        console.error('error loading', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  find(filter: FlightFilter): Observable<Flight[]> {\r\n    const url = `http://www.angular.at/api/flight`;\r\n\r\n    console.log(\"findddinggggg\");\r\n\r\n    const headers = new HttpHeaders().set('Accept', 'application/json');\r\n\r\n    const params = {\r\n      'from': filter.from,\r\n      'to': filter.to,\r\n    };\r\n\r\n    console.log({ params })\r\n    // const params = {\r\n\r\n    // };\r\n    const resp = this.http.get<Flight[]>(url, { params, headers });\r\n\r\n    console.log({ resp });\r\n\r\n\r\n    return this.http.get<Flight[]>(url, { params, headers });\r\n  }\r\n\r\n  save(entity: Flight): Observable<Flight> {\r\n    let params = new HttpParams();\r\n    let url = '';\r\n    const headers = new HttpHeaders().set('content-type', 'application/json');\r\n    console.log(\"savvvvvvvvvvvvving\")\r\n    if (entity.id) {\r\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\r\n      params = new HttpParams().set('ID', entity.id.toString());\r\n      return this.http.put<Flight>(url, entity, { headers, params });\r\n    } else {\r\n      url = `http://www.angular.at/api/flight`;\r\n      return this.http.post<Flight>(url, entity, { headers, params });\r\n    }\r\n  }\r\n\r\n  delete(entity: Flight): Observable<Flight> {\r\n\r\n    let params = new HttpParams();\r\n    let url = '';\r\n\r\n    console.log(\"deleeeeeeeeetinnnnnnnnnnnnnnn\")\r\n\r\n    const headers = new HttpHeaders().set('content-type', 'application/json');\r\n    if (entity.id) {\r\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\r\n      params = new HttpParams().set('ID', entity.id.toString());\r\n      return this.http.delete<Flight>(url, { headers, params });\r\n    }\r\n    return EMPTY;\r\n  }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}